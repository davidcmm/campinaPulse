library("vioplot")
library("ggplot2")
library("dplyr")
library("knitr")
library("texreg")
library("ineq")
library(R.utils)
library("spdep")
library("reshape")
library("fitdistrplus")
library("plotly")
library("caret")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("Percentual")
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
keys <- append(keys, file)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("masculino", key) | grepl("feminino", key)) %>% mutate(type="gender") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("jovem", key) | grepl("adulto", key)) %>% mutate(type="age") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("baixa", key) | grepl("media", key)) %>% mutate(type="income") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("Percentual")
polar
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("Percentual")
gender_data <-filter(counters, grepl("masculino", key) | grepl("feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("jovem", key) | grepl("adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("baixa", key) | grepl("media", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("Percentual")
polar
split("teste")
file
strsplit(file, split="/", fixed=TRUE)[[1]][4]
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("")
polar
ggsave("polar.pdf", plot=polar_plot)
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("")
ggsave("polar.pdf", plot=polar)
ggsave("polar.pdf", plot=polar, width=10, height=10)
ggsave("polar.pdf", plot=polar, width=5, height=5)
7)
ggsave("polar.pdf", plot=polar, width=7, height=7)
ggsave("polar.pdf", plot=polar, width=10, height=5)
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("")
polar
count_profile <- function(listOfFiles, ufcg_users) {
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("") + theme(legend.title=element_blank())
#Gráficos de barras para tese
genero <- data.frame( classe=c("Masculino", "Feminino"), valor=c(filter(counters, grepl("Masculino", key))$value, filter(counters, grepl("Feminino", key))$value) ) %>% mutate(percent=valor/sum(valor))
gen_plot <- ggplot(genero, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Gênero") + ylab("Percentual")
renda <- data.frame( classe=c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"), valor=c(72, 47,  83, 51, 50) ) %>% mutate(percent=valor/sum(valor))
renda$classe <- factor(renda$classe, levels = c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"))
ren_plot <- ggplot(renda, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Renda") + ylab("Percentual")
idade <- data.frame( classe=c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"), valor=c(72, 77, 89, 27, 22, 17) ) %>% mutate(percent=valor/sum(valor))
idade$classe <- factor(idade$classe, levels = c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"))
ida_plot <- ggplot(idade, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Idade") + ylab("Percentual")
multiplot(polar, gen_plot, ren_plot, ida_plot, cols=1)
ggsave("polar_ufcg.pdf", plot=polar, width=10, height=5)
}
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
count_profile(listOfFiles, ufcg_users)
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
ufcg_users
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
count_profile(listOfFiles, ufcg_users)
library("dplur")
library("dplyr")
count_profile(listOfFiles, ufcg_users)
library("ggplot2")
count_profile(listOfFiles, ufcg_users)
count_profile <- function(listOfFiles, ufcg_users) {
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("Teste") + theme(legend.title=element_blank())
#Gráficos de barras para tese
genero <- data.frame( classe=c("Masculino", "Feminino"), valor=c(filter(counters, grepl("Masculino", key))$value, filter(counters, grepl("Feminino", key))$value) ) %>% mutate(percent=valor/sum(valor))
gen_plot <- ggplot(genero, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Gênero") + ylab("Percentual")
renda <- data.frame( classe=c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"), valor=c(72, 47,  83, 51, 50) ) %>% mutate(percent=valor/sum(valor))
renda$classe <- factor(renda$classe, levels = c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"))
ren_plot <- ggplot(renda, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Renda") + ylab("Percentual")
idade <- data.frame( classe=c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"), valor=c(72, 77, 89, 27, 22, 17) ) %>% mutate(percent=valor/sum(valor))
idade$classe <- factor(idade$classe, levels = c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"))
ida_plot <- ggplot(idade, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Idade") + ylab("Percentual")
multiplot(polar, gen_plot, ren_plot, ida_plot, cols=1)
ggsave("polar_ufcg.pdf", plot=polar, width=10, height=5)
}
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
count_profile(listOfFiles, ufcg_users)
count_profile <- function(listOfFiles, ufcg_users) {
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("") + theme(legend.title=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
#Gráficos de barras para tese
genero <- data.frame( classe=c("Masculino", "Feminino"), valor=c(filter(counters, grepl("Masculino", key))$value, filter(counters, grepl("Feminino", key))$value) ) %>% mutate(percent=valor/sum(valor))
gen_plot <- ggplot(genero, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Gênero") + ylab("Percentual")
renda <- data.frame( classe=c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"), valor=c(72, 47,  83, 51, 50) ) %>% mutate(percent=valor/sum(valor))
renda$classe <- factor(renda$classe, levels = c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"))
ren_plot <- ggplot(renda, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Renda") + ylab("Percentual")
idade <- data.frame( classe=c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"), valor=c(72, 77, 89, 27, 22, 17) ) %>% mutate(percent=valor/sum(valor))
idade$classe <- factor(idade$classe, levels = c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"))
ida_plot <- ggplot(idade, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Idade") + ylab("Percentual")
multiplot(polar, gen_plot, ren_plot, ida_plot, cols=1)
ggsave("polar_ufcg.pdf", plot=polar, width=10, height=5)
}
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
count_profile(listOfFiles, ufcg_users)
count_profile <- function(listOfFiles, ufcg_users) {
keys <- c()
n_users <- c()
for (file in listOfFiles){
data <- read.table(file, skip=1)
valid_users <- filter(data, V1 %in% ufcg_users$V1)
key_to_save <- ""
if(grepl("media", file)){
key_to_save <- "Média"
}else if(grepl("baixa", file)){
key_to_save <- "Baixa"
}else if(grepl("masculino", file)){
key_to_save <- "Masculino"
}else if(grepl("feminino", file)){
key_to_save <- "Feminino"
}else if(grepl("jovem", file)){
key_to_save <- "Jovem"
}else if(grepl("adulto", file)){
key_to_save <- "Adulto"
}
keys <- append(keys, key_to_save)
n_users <- append(n_users, nrow(valid_users))
}
counters = data.frame("key"=keys, "value"=n_users)
print(counters)
gender_data <-filter(counters, grepl("Masculino", key) | grepl("Feminino", key)) %>% mutate(type="Gênero") %>% mutate(percent=value/sum(value))
age_data <-filter(counters, grepl("Jovem", key) | grepl("Adulto", key)) %>% mutate(type="Idade") %>% mutate(percent=value/sum(value))
income_data <-filter(counters, grepl("Baixa", key) | grepl("Média", key)) %>% mutate(type="Renda") %>% mutate(percent=value/sum(value))
counters <- rbind(gender_data, income_data, age_data)
polar <- ggplot(data=counters, aes(x=factor(1), y=percent, fill = factor(key))) + geom_bar(width = 1, stat="identity") + facet_grid(facets=.~type) + coord_polar(theta="y") + ylab("") + xlab("") + theme(legend.title=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
#Gráficos de barras para tese
genero <- data.frame( classe=c("Masculino", "Feminino"), valor=c(filter(counters, grepl("Masculino", key))$value, filter(counters, grepl("Feminino", key))$value) ) %>% mutate(percent=valor/sum(valor))
gen_plot <- ggplot(genero, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Gênero") + ylab("Percentual")
renda <- data.frame( classe=c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"), valor=c(72, 47,  83, 51, 50) ) %>% mutate(percent=valor/sum(valor))
renda$classe <- factor(renda$classe, levels = c("Baixa", "Média Baixa", "Média", "Média Alta", "Alta"))
ren_plot <- ggplot(renda, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Renda") + ylab("Percentual")
idade <- data.frame( classe=c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"), valor=c(72, 77, 89, 27, 22, 17) ) %>% mutate(percent=valor/sum(valor))
idade$classe <- factor(idade$classe, levels = c("18-", "18 a 24", "25 a 34", "35 a 44", "45 a 54", "55+"))
ida_plot <- ggplot(idade, aes(x=classe, y=percent, fill=classe)) + geom_bar(width=1, stat="identity") + xlab("Idade") + ylab("Percentual")
multiplot(polar, gen_plot, ren_plot, ida_plot, cols=1)
ggsave("polar_ufcg.pdf", plot=polar, width=10, height=5)
}
ufcg_users <- read.csv("../backupBanco/ufcg-users.csv", header=FALSE)
folder <- "../backupBanco/idsGerais/"
files <- c("adulto.dat", "baixa.dat", "feminino.dat", "jovem.dat", "masculino.dat", "media.dat")
listOfFiles <- paste(folder, files, sep="")
count_profile(listOfFiles, ufcg_users)
