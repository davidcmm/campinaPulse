pos <- read.table("testeslime_1.dat", sep="\t")
neg <- read.table("testeslime_2.dat", sep="\t")
pos$V6 <- pos$V3 - qnorm(0.975)*pos$V4/sqrt(pos$V5)
pos$V7 <- pos$V3 + qnorm(0.975)*pos$V4/sqrt(pos$V5)
neg$V6 <- neg$V3 - qnorm(0.975)*neg$V4/sqrt(neg$V5)
neg$V7 <- neg$V3 + qnorm(0.975)*neg$V4/sqrt(neg$V5)
sink("lime_ordered_3classes.dat", append=TRUE)
print("## Pleasantness baixa")
library(dplyr)
arrange(pos, -V3)
arrange(neg, V3)
pos <- read.table("testeslime_1.dat", sep="\t")
neg <- read.table("testeslime_2.dat", sep="\t")
pos$V6 <- pos$V3 - qnorm(0.975)*pos$V4/sqrt(pos$V5)
pos$V7 <- pos$V3 + qnorm(0.975)*pos$V4/sqrt(pos$V5)
neg$V6 <- neg$V3 - qnorm(0.975)*neg$V4/sqrt(neg$V5)
neg$V7 <- neg$V3 + qnorm(0.975)*neg$V4/sqrt(neg$V5)
print("## Pleasantness media")
arrange(pos, -V3)
arrange(neg, V3)
sink("lime_ordered_wodraw.dat", append=TRUE)
pos <- read.table("testeslime_1.dat", sep="\t")
neg <- read.table("testeslime_2.dat", sep="\t")
pos$V6 <- pos$V3 - qnorm(0.975)*pos$V4/sqrt(pos$V5)
pos$V7 <- pos$V3 + qnorm(0.975)*pos$V4/sqrt(pos$V5)
neg$V6 <- neg$V3 - qnorm(0.975)*neg$V4/sqrt(neg$V5)
neg$V7 <- neg$V3 + qnorm(0.975)*neg$V4/sqrt(neg$V5)
print("## Pleasantness baixa")
arrange(pos, -V3)
arrange(neg, V3)
pos <- read.table("testeslime_1.dat", sep="\t")
neg <- read.table("testeslime_2.dat", sep="\t")
pos$V6 <- pos$V3 - qnorm(0.975)*pos$V4/sqrt(pos$V5)
pos$V7 <- pos$V3 + qnorm(0.975)*pos$V4/sqrt(pos$V5)
neg$V6 <- neg$V3 - qnorm(0.975)*neg$V4/sqrt(neg$V5)
neg$V7 <- neg$V3 + qnorm(0.975)*neg$V4/sqrt(neg$V5)
print("## Pleasantness media")
arrange(pos, -V3)
arrange(neg, V3)
require(gmodels)
require(vcd)
require(lme4)
library(caret)
library(pscl)
library(DT)
library(ggplot2)
theme_set(theme_bw())
library(GGally)
library(dplyr, warn.conflicts = F)
library(broom)
library(car)
library(readr)
compare_glms <- function(baseline, model){
modelChi <- baseline$deviance - model$deviance
chidf <- baseline$df.residual - model$df.residual
chisq.prob <- 1 - pchisq(modelChi, chidf)
print(paste(modelChi, chidf, chisq.prob))
}
compare_null <- function(baselineModel){
modelChi <- baselineModel$null.deviance - baselineModel$deviance
chidf <- baselineModel$df.null - baselineModel$df.residual
chisq.prob <- 1 - pchisq(modelChi, chidf)
print(paste(modelChi, chidf, chisq.prob))
}
raw_data = read_delim(
"classifier//classifier_input_wodraw.dat",
delim = "\t",
col_types = cols(
.default = col_double(),
row = col_integer(),
choice = col_character(),
question = col_character(),
photo1 = col_character(),
photo2 = col_character(),
choice = col_integer(),
userID = col_integer(),
gender = col_character(),
age = col_character(),
income = col_character(),
education = col_character(),
city = col_character(),
marital = col_character(),
graffiti1 = col_character(),
bairro1 = col_character(),
graffiti2 = col_character(),
bairro2 = col_character()
)
)
data = raw_data %>%
mutate( # Recode
income = if_else(is.na(income), "media", income),
age_cat = if_else(as.integer(age) >= 25 | is.na(age), "adulto", "jovem"),
inc_cat = if_else(income %in% c("baixa", "media baixa"),
"baixa",
"media"), # substituirÃ¡ os NA
choice = if_else(choice == "1", "0",
if_else(choice == "-1", "1", choice)),
bair_cat = if_else(bairro1 == bairro2, "mesmo",
paste0(bairro1, "_", bairro2))
) %>%
mutate_at( # to factor
vars(income, age_cat, inc_cat, choice, bair_cat, marital, gender),
as.factor) %>%
mutate( # relevel
bair_cat = relevel(bair_cat,  "mesmo"),
marital = relevel(marital,  "solteiro"),
income = relevel(income,  "baixa"),
age_cat = relevel(age_cat,  "jovem"),
gender = relevel(gender,  "feminino"),
inc_cat = relevel(inc_cat,  "baixa")
)
# Create diff features
data = data %>%
mutate(
d_swidth = street_wid1 - street_wid2,
d_mvcars = mov_cars1 - mov_cars2,
d_pcars = park_cars1 - park_cars2,
d_trees = trees1 - trees2,
d_mvciclyst = mov_ciclyst1 - mov_ciclyst2,
d_lands = landscape1 - landscape2,
d_bid = build_ident1 - build_ident2,
d_bheig = log2(build_height1 + 1) - log2(build_height2 + 1),
d_dbuild = diff_build1 - diff_build2,
d_people = people1 - people2,
d_graff = (graffiti1 == "Yes") - (graffiti2 == "Yes")
)
# SPLIT + SCALE
agrad <- filter(data, !(question %in% c("seguro?", "seguro"))) %>%
mutate_at(vars(40:50), scale)
seg <- filter(data, (question %in% c("seguro?", "seguro")))  %>%
mutate_at(vars(40:50), scale)
